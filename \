require("packer").startup(function()
  use({ "wbthomason/packer.nvim" })
  use("mattn/emmet-vim")
  use({ "nvim-treesitter/nvim-treesitter", run = ":TSUpdate" })

  --Snippets
  use("L3MON4D3/LuaSnip")
  --vscode-like
  use("rafamadriz/friendly-snippets")
  --snipmate-like (el plugin de snipmate no incluye ningún snippet)
  use("honza/vim-snippets")

  --LSP
  use("neovim/nvim-lspconfig")
  -- use("williamboman/nvim-lsp-installer")
  use("williamboman/mason.nvim")
  use("williamboman/mason-lspconfig.nvim")
  use("folke/trouble.nvim")
  use("jose-elias-alvarez/null-ls.nvim")
  use("glepnir/lspsaga.nvim")
  use("ray-x/lsp_signature.nvim")
  use("simrat39/symbols-outline.nvim")

  --Debugger
  use("mfussenegger/nvim-dap")

  --cmp
  use("hrsh7th/cmp-nvim-lsp")
  use("hrsh7th/cmp-buffer")
  use("hrsh7th/cmp-path")
  use("hrsh7th/cmp-cmdline")
  use("hrsh7th/nvim-cmp")
  use("saadparwaiz1/cmp_luasnip")
  use("kdheepak/cmp-latex-symbols")
  use("lukas-reineke/cmp-rg")

  --telescope
  use({ "nvim-telescope/telescope-fzf-native.nvim", run = "make" })
  use("nvim-lua/plenary.nvim")
  use("nvim-telescope/telescope.nvim")
  use({
    "nvim-telescope/telescope-frecency.nvim",
    requires = { "tami5/sqlite.lua" },
  })

  use({ "akinsho/bufferline.nvim", tag = "v2.*", requires = "kyazdani42/nvim-web-devicons" })
  use("kyazdani42/nvim-tree.lua")
  use("numToStr/Comment.nvim")
  use({
    "numtostr/Fterm.nvim",
    config = function()
      require("fterm").setup()
    end,
  })
  use("ThePrimeagen/vim-be-good")

  ----MODES----
  --Git
  use("tpope/vim-fugitive")
  use("https://github.com/mattn/vim-gist")
  use("lewis6991/gitsigns.nvim")

  --Markdown---
  use("godlygeek/tabular")
  use("preservim/vim-markdown")
  use({
    "iamcco/markdown-preview.nvim",
    run = function()
      vim.fn["mkdp#util#install"]()
    end,
    setup = function()
      vim.g.mkdp_filetypes = { "markdown" }
    end,
    ft = { "markdown" },
  })


  --REPL
  use("jupyter-vim/jupyter-vim")
  use "hkupty/iron.nvim"
  use { 'michaelb/sniprun', run = 'bash ./install.sh'}

  --R
  use("jalvesaq/Nvim-R")

  --latex
  use("lervag/vimtex")

  --tessst
  use("vim-test/vim-test")

  --Docker
  -- use("dgrbrady/nvim-docker")

  ----theme----
  use("arcticicestudio/nord-vim")
  use("rakr/vim-one")
  use("folke/tokyonight.nvim")
  use("xiyaowong/nvim-transparent")

  ----appearance details----
  use("ryanoasis/vim-devicons")
  use("nvim-lualine/lualine.nvim")
  use("goolord/alpha-nvim")
  use("lukas-reineke/indent-blankline.nvim")
  use({
    "karb94/neoscroll.nvim",
    config = function()
      require("neoscroll").setup()
    end,
  })
  use("p00f/nvim-ts-rainbow")
  use("norcalli/nvim-colorizer.lua")

  ----typing----
  use("windwp/nvim-autopairs")
  use("kylechui/nvim-surround")
  use("machakann/vim-sandwich")
  use("windwp/nvim-ts-autotag")

  --  use 'mg979/vim-visual-multi'

  ----Others----
  use("ahmedkhalf/project.nvim")
  use({
    "lewis6991/spellsitter.nvim",
    config = function()
      require("spellsitter").setup()
    end,
  })

  use("lewis6991/impatient.nvim")
  use({
    "rcarriga/nvim-notify",
    config = function()
      require("notify").setup({
        stages = "slide",
        background_colour = "#000000",
      })
    end,
  })
  use({
    "folke/todo-comments.nvim",
    requires = "nvim-lua/plenary.nvim",
  })
  use({ "kevinhwang91/nvim-ufo", requires = "kevinhwang91/promise-async" })
end)

require("config.plugins.treesitter")
require("config.plugins.cmp")
require("config.plugins.mason") -- must be always before require('plugins.lspconfig')
require("config.plugins.luasnip")
require("config.plugins.lspconfig")
require("config.plugins.trouble")
require("config.plugins.null-ls")
require("config.plugins.lspsaga")
require("config.plugins.nvim-tree")
require("config.plugins.lualine")
require("config.plugins.alpha")
require("config.plugins.colorizer")
require("config.plugins.nvim-transparent")
require("config.plugins.blankline")
require("config.plugins.bufferline")
require("config.plugins.gitsigns")
require("config.plugins.comment")
require("config.plugins.autopairs")
require("config.plugins.project")
require("config.plugins.nvimr")
require("config.plugins.lsp_signature")
require("config.plugins.telescope")
require("config.plugins.symbolsoutline")
require("config.plugins.ufo")

require("nvim-surround").setup() -- por algún motivo el plugin no funcionaba si invocaba desde "use"
require("todo-comments").setup()
require("notify").setup({
  stages = "slide",
  background_colour = "#000000",
})

require("iron.core").setup {
  config = {
    -- If iron should expose `<plug>(...)` mappings for the plugins
    should_map_plug = false,
    -- Whether a repl should be discarded or not
    scratch_repl = true,
    -- Your repl definitions come here
    repl_definition = {
      sh = {
        command = {"zsh"}
      }
    },
    repl_open_cmd = require('iron.view').curry.bottom(40),
    -- how the REPL window will be opened, the default is opening
    -- a float window of height 40 at the bottom.
  },
  -- Iron doesn't set keymaps by default anymore. Set them here
  -- or use `should_map_plug = true` and map from you vim files
  keymaps = {
    send_motion = "<space>sc",
    visual_send = "<space>sc",
    send_file = "<space>sf",
    send_line = "<space>sl",
    send_mark = "<space>sm",
    mark_motion = "<space>mc",
    mark_visual = "<space>mc",
    remove_mark = "<space>md",
    cr = "<space>s<cr>",
    interrupt = "<space>s<space>",
    exit = "<space>sq",
    clear = "<space>cl",
  },
  -- If the highlight is on, you can change how it looks
  -- For the available options, check nvim_set_hl
  highlight = {
    italic = true
  }
}

--Mappings
require("config.mappings")
