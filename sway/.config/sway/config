# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi --show=drun --lines=7 --prompt=""

#intl dead keys keyboard
# input * xkb_layout "us,ru"
# input * xkb_variant "intl,"
# input * xkb_option "grp:alt_shift_toggle"
input type:keyboard {
    xkb_layout us,us,ru,gr
    xkb_variant intl,altgr-intl,,
    xkb_options grp:alt_shift_toggle
}


# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Arimo Nerd Font 11

##Cursor theme
# seat seat0 xcursor_theme "Sunity-cursors" 30

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill


##monitor settings
output 'Unknown GFV22CB             ' mode 1920x1080@120Hz
output 'Unknown GFV22CB             ' adaptive_sync on
output 'Samsung Electric Company S22F350 H4ZM701012' disable

bindsym $mod+Shift+Escape exec sway output "*" enable | sway output DP-1 res 1920x1080 pos 0 0 | sway output HDMI-A-1 resolution 1920x1080 position 0 1080

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
# Media player controls. Hay que instalar playerctl
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% 
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle 
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

#Brightness. Requires "light"
bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%- 


#Touchpad configuration
#dwt es disable while typing
#middle_emulation se activa presionando click izquierdo y derecho a la vez 
   input type:touchpad {
       dwt enabled
       tap enabled
       natural_scroll enabled
       middle_emulation enabled
       scroll_factor 0.3
   }

# hide mouse after 10 seconds inactivity
seat * hide_cursor 10000


# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

#GTK GTK GTK GTK hay que usar en 'lxappearance' no 'lxappearance-gtk3' en arch porque crashea https://github.com/swaywm/sway/wiki/GTK-3-settings-on-Wayland#setting-values-in-gsettings
set $gnome-schema org.gnome.desktop.interface

exec_always {
    gsettings set org.gnome.desktop.wm.preferences theme Adwaita-One-Dark
    gsettings set $gnome-schema font-name "Arimo Nerd Font"
    gsettings set $gnome-schema gtk-theme Adwaita-One-Dark
    gsettings set org.gnome.desktop.interface color-scheme "prefer-dark"
    gsettings set $gnome-schema icon-theme Adwaita

    }

## Window colors

 # class                 border  backgr. text    indicator
    client.focused          #64727d #64727D #ffffff #64727d
    client.unfocused        #2e3440 #2e3440 #888888 #2e3440
    client.focused_inactive #2e3440 #2e3440 #888888 #2e3440
    client.placeholder      #2e3440 #2e3440 #888888 #2e3440
    client.urgent           #900000 #900000 #ffffff #900000

    client.background       #242424

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+Return exec alacritty --class floatterm
    for_window [app_id="floatterm"] floating enable
    for_window [app_id="Sway recorder"] floating enable


    # Kill focused window
    bindsym --to-code $mod+Shift+q kill

    # Start your launcher
    bindsym --to-code $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym --to-code $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym --to-code $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

#return to previous workspace
workspace_auto_back_and_forth yes


# default floating windows
for_window [window_role = "pop-up"] floating enable
for_window [window_role = "bubble"] floating enable
for_window [window_role = "dialog"] floating enable
for_window [window_type = "dialog"] floating enable
for_window [window_role = "task_dialog"] floating enable
for_window [window_type = "menu"] floating enable
for_window [app_id = "floating"] floating enable


#screen recording

#take screenshots with super+p, requiere slurp y grim
bindsym --to-code $mod+p exec grim -g "$(slurp)" - | wl-copy
#bindsym $mod+Shift+p exec grim -g "$(slurp)" /home/pipe99g/Desktop/$(date +'%s_grim.png')
bindsym --to-code $mod+Shift+p exec grim -g "$(slurp)" - | swappy -f -

#exec jupyter qterminal and nvim
bindsym --to-code $mod+c exec jupyter qtconsole | exec alacritty -e nvim ~/ve/prog/

#exec swayrecorder
bindsym --to-code $mod+x exec $HOME/.config/sway/scripts/toggleSwayRecorder.sh



#
# Moving around:
#
    # Move your focus around
    bindsym --to-code $mod+$left focus left
    bindsym --to-code $mod+$down focus down
    bindsym --to-code $mod+$up focus up
    bindsym --to-code $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym --to-code $mod+Shift+$left move left
    bindsym --to-code $mod+Shift+$down move down
    bindsym --to-code $mod+Shift+$up move up
    bindsym --to-code $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    bindsym $mod+1 [workspace="1"] move workspace to output current; workspace number 1
    bindsym $mod+2 [workspace="2"] move workspace to output current; workspace number 2
    bindsym $mod+3 [workspace="3"] move workspace to output current; workspace number 3
    bindsym $mod+4 [workspace="4"] move workspace to output current; workspace number 4
    bindsym $mod+5 [workspace="5"] move workspace to output current; workspace number 5
    bindsym $mod+6 [workspace="6"] move workspace to output current; workspace number 6
    bindsym $mod+7 [workspace="7"] move workspace to output current; workspace number 7
    bindsym $mod+8 [workspace="8"] move workspace to output current; workspace number 8
    bindsym $mod+9 [workspace="9"] move workspace to output current; workspace number 9
    bindsym $mod+0 [workspace="0"] move workspace to output current; workspace number 10
    
#opening some apps in certain workspace, usar xprop para determinar el instance(primero) y el class(segundo) para wayland se usa "swaymsg -t get_tree"
assign [class="firefox" instance="Navigator"] → 2
assign [class="Spotify" instance="spotify"] → 1
assign [class="libreWolf" instance="Navigator"] → 2
assign [class ="discord" instance="discord"] → 8 
assign [class="Steam" instance="Steam"] → 9
assign [class="csgo_linux64" instance="csgo_linux64"] → 10
assign [class="dota2" instance="dota2"] → 10


workspace 7 output 'Samsung Electric Company S22F350 H4ZM701012'

#Evita que swayidle funcione cuando tengo algún programa en fullscreen
for_window [class=".*"] inhibit_idle fullscreen
for_window [app_id=".*"] inhibit_idle fullscreen


#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code $mod+b splith
    bindsym --to-code $mod+v splitv

    # Switch the current container between different layout styles
    bindsym --to-code $mod+s layout stacking
    bindsym --to-code $mod+w layout tabbed
    bindsym --to-code $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym --to-code $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym --to-code $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym --to-code $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $left resize shrink width 10px
    bindsym --to-code $down resize grow height 10px
    bindsym --to-code $up resize shrink height 10px
    bindsym --to-code $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym --to-code $mod+r mode "resize"

###GAPS
gaps inner 4

# Removes the title bar of each window.
  default_border pixel 2

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
	swaybar_command waybar

    }
}


exec gammastep
exec_always autotiling
workspace 2; exec firefox;
workspace 1; exec flatpak run --socket=wayland com.spotify.Client;
# output "*" bg /home/pipe99g/.config/sway/revocationwallpaper.jpeg tile
output "*" bg /home/pipe99g/.config/sway/kriegsplit.jpg fill
exec swayidle -w \
    timeout 720 'swaylock -f -e -i ~/.config/sway/grotesqueimpalement.jpg' \
    timeout 1500 'systemctl suspend' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep 'playerctl pause && swaylock -f -e -i ~/.config/sway/grotesqueimpalement.jpg'
 


    #va entre 720 y 1020, no sé por qué no funciona
    #timeout 15 'if pgrep -x swaylock; then swaymsg "output * dpms off"; fi' \

include /etc/sway/config.d/*
